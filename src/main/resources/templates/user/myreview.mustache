{{>layouts/header}}
<div class="container">
<br>
<h2>마이페이지</h2>
<br>
{{nickname}}님 환영합니다.<br><br>


<div class="recent-reviews">
    <h4>최근 리뷰한 작품</h4>
    <div class="article-list" id="article-list">
        <!-- Fetch된 데이터가 여기에 추가됩니다. -->
    </div>
</div>


<script>
    const memberId = {{member_id}}; 
    console.log('Member ID:', memberId);

    //최근 리뷰한 작품
    fetch(`/api/mypage/myreview/${memberId}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            const articleList = document.getElementById('article-list');

            data.forEach(articleReview => {
                // 새로운 div 생성
                const articleItem = document.createElement('div');
                articleItem.className = 'article-item';
                articleItem.setAttribute('data-score', articleReview.score);

                // HTML 구성
                articleItem.innerHTML = `
                    <a href="/articles/anime/${articleReview.articleId}">
                        <div class="score"></div> <!-- 별을 표시할 부분 -->
                        <img src="/images/pic/anime/${articleReview.main_pic}" alt="메인사진" class="main-pic">
                        <div class="title"><b>[${articleReview.genre}]${articleReview.title}</b></div>
                        <div class="score-reason">${articleReview.score_reason}</div>
                    </a>
                `;

                // article-item을 article-list에 추가
                articleList.appendChild(articleItem);
            });

            // 별 표시 함수 호출
            displayStars();
            // 창 크기 변경 시 별 크기 재조정
            window.addEventListener('resize', displayStars);
        })
        .catch(error => {
            console.error('Error fetching the data:', error);
        });
    


    function displayStars() {
        const articles = document.querySelectorAll('.article-item');

        articles.forEach(article => {
            const score = parseInt(article.getAttribute('data-score')); // data-score에서 점수 가져오기
            const starsContainer = article.querySelector('.score'); // 별을 표시할 요소 선택
            const imgElement = article.querySelector('.main-pic'); // 해당 아티클의 main-pic 선택
    
            starsContainer.innerHTML = ''; // 기존 내용 삭제
    
            if (imgElement) {
                const imgWidth = imgElement.width;  // 이미지의 실제 너비 (150px로 설정)
                const starSize = imgWidth * 0.75 / 5; // 별의 크기를 이미지의 0.75배 크기에서 5등분
    
                // 별을 표시
                for (let i = 1; i <= 5; i++) {
                    const star = document.createElement('span');
                    star.className = 'star';
    
                    if (i <= score) {
                        star.textContent = '⭐'; // 채워진 별
                    } else {
                        star.textContent = '☆'; // 빈 별
                    }
    
                    // 별 크기 적용
                    star.style.fontSize = `${starSize}px`; // 동적으로 별 크기 설정
                    starsContainer.appendChild(star);
                }
            }
        });
    }


</script>

<style>
    /*내가 쓴 리뷰*/
   .recent-reviews {
        margin-top: 20px;
    }
    
    .article-list {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between; /* 각 아이템 간의 간격을 조절 */
    }
    
    .article-item {
        width: calc(20% - 10px); /* 5개 단위로 가로 배치, 간격을 고려 */
        margin-bottom: 20px; /* 세로 간격 */
        position: relative; /* 자식 요소의 절대 위치를 기준으로 설정 */
        padding: 15px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .article-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    }

    /* 모바일 화면에서 한 줄에 3개씩 보이도록 설정 */
    @media (max-width: 768px) {
        .article-item {
            width: calc(33.33% - 10px);  /*3개가 한 줄에 표시되도록 설정 (여백 고려) */
            /*width: calc(50% - 10px);  모바일에서는 2개씩 표시 */
        }
    }
    .main-pic {
        width: 100%; /* 전체 폭을 차지 */
        /*aspect-ratio: 7 / 5;  7:5 비율 */
        object-fit: cover; /* 비율 유지하며 이미지 잘림 방지 */
    }
    
    .title {
        display: inline-block; /* 내용을 감싸는 만큼만 너비 설정 */
        background-color: white; /* 흰색 배경 */
        color: black; /* 검정색 글자 */
        text-align: center; /* 중앙 정렬 */
        max-width: 100%; /* 최대 너비 설정 */
        white-space: nowrap; /* 줄 바꿈 방지 */
        overflow: hidden; /* 넘치는 텍스트 숨기기 */
        text-overflow: ellipsis; /* ... 표시 */
        text-align: center; /* 중앙 정렬 */
    }

    .score-reason {
        background-color: white; /* 흰색 배경 */
        color: black; /* 검정색 글자 */
        padding: 5px;
        overflow: hidden; /* 내용이 넘칠 경우 숨김 */
        text-overflow: ellipsis; /* ... 표시 */
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2; /* 2줄로 제한 */
    }
    
    .score {
        font-size: 1.6vw; /* 화면 너비의 5% 크기로 설정 */
        text-align: center; /* 중앙 정렬 */
    }
    /* 하이퍼링크의 밑줄 제거 */
    .article-item a {
        text-decoration: none; /* 기본 밑줄 제거 */
        color: inherit; /* 부모의 글자 색상 상속 */
    }


</style>
{{>layouts/footer}}