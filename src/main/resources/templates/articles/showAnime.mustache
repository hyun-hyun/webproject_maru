{{>layouts/header}}

<div class="container">
<h4>Animation</h4>
<br>

{{#article}}

<div class="row g-2">
  <div class="col-md-6">
    <label class="form-label"><h1> {{title}}</h1></label><br>
    <label class="form-label">장르 </label> <b>{{genre}}</b><br>
    <label class="form-label">방영 </label> <b>{{broad_date}}</b><br>
    <label class="form-label">제작 </label> <b>{{ani_company}}</b><br>
    <label class="form-label">원작 </label> <b>{{author}}</b><br>
    <label class="form-label">줄거리</label><br>
    {{story}}
    <br>
  </div>

  <div class="col-md-5" align="center">
  <img src="../../images/pic/anime/{{main_pic}}" class="addImage" alt="작품표지"></img>
    <br>
  </div>
</div>
<!--tag-->
    <ul>
      {{#tagSelectionCounts}}
          <span class="btn btn-outline-info btn-round m-1" > <b>{{tagName}}</b> : {{count}}</span>
          <input type="checkbox" id="tag_{{id}}" name="tags" value="{{id}}" style="display:none;">
          <!--m 모든방향 마진 mb-0~5 아래, mt 위 ml, mr 등 있음-->
          <!--<button type="button" onclick="toggleTag({{id}})">Toggle</button>-->
      {{/tagSelectionCounts}}
    </ul>

<br>

<!--종합추천점수-->
<label class="form-label">종합추천점수</label>
<button type="button" onclick="alert('사이즈지정해서 평가결과 뜨게하기')"class="btn btn-primary">자세히보기</button>

<br>
<label class="form-label">등장인물</label>
<br>
<div class="image-container" align="center">

  {{#subPic1.realChar}}
  <div class="image-item">
  <img src="../../images/pic/anime/{{subPic1.pic}}" class="addImage_m" alt="등장인물1"></img>
  {{subPic1.realChar}}<br>
  <div class="gray-text">{{subPic1.realVoiceChar}}</div>
  {{subPic1.korChar}}<br>
  <div class="gray-text">{{subPic1.korVoiceChar}}</div>
  </div>
  {{/subPic1.realChar}}

  {{#subPic2.realChar}}
  <div class="image-item">
  <img src="../../images/pic/anime/{{subPic2.pic}}" class="addImage_m" alt="등장인물2"></img>
  {{subPic2.realChar}}<br>
  <div class="gray-text">{{subPic2.realVoiceChar}}</div>
  {{subPic2.korChar}}<br>
  <div class="gray-text">{{subPic2.korVoiceChar}}</div>
  </div>
  {{/subPic2.realChar}}


  {{#subPic3.realChar}}
  <div class="image-item">
  <img src="../../images/pic/anime/{{subPic3.pic}}" class="addImage_m" alt="등장인물3"></img>
  {{subPic3.realChar}}<br>
  <div class="gray-text">{{subPic3.realVoiceChar}}</div>
  {{subPic3.korChar}}<br>
  <div class="gray-text">{{subPic3.korVoiceChar}}</div>
  </div>
  {{/subPic3.realChar}}
  
  {{#subPic4.realChar}}
  <div class="image-item">
  <img src="../../images/pic/anime/{{subPic4.pic}}" class="addImage_m" alt="등장인물4"></img>
  {{subPic4.realChar}}<br>
  <div class="gray-text">{{subPic4.realVoiceChar}}</div>
  {{subPic4.korChar}}<br>
  <div class="gray-text">{{subPic4.korVoiceChar}}</div>
  </div>
  {{/subPic4.realChar}}

  {{#subPic5.realChar}}
  <div class="image-item">
  <img src="../../images/pic/anime/{{subPic5.pic}}" class="addImage_m" alt="등장인물5"></img>
  {{subPic5.realChar}}<br>
  <div class="gray-text">{{subPic5.realVoiceChar}}</div>
  {{subPic5.korChar}}<br>
  <div class="gray-text">{{subPic5.korVoiceChar}}</div>
  </div>
  {{/subPic5.realChar}}


</div>
<br> 



<!--전체 리뷰-->
<h5>전체리뷰</h5>
전체 평점 : {{avg_score}}/5.0 리뷰 수 : {{c_score}}<br>
<hr>
<span class="review-toggle">전체리뷰 보기</span>
<div class="review-content">
{{#reviewDtos}}
<div id="scoreForm" class="review">
    <fieldset disabled>
      <div>
        <p>{{member_nickname}}</p>

          <input type="radio" name="rate-{{id}}" value="5" id="rate5-{{id}}" disabled><label class="radio-label" for="rate5-{{id}}">♣</label>
          <input type="radio" name="rate-{{id}}" value="4" id="rate4-{{id}}" disabled><label class="radio-label" for="rate4-{{id}}">♣</label>
          <input type="radio" name="rate-{{id}}" value="3" id="rate3-{{id}}" disabled><label class="radio-label" for="rate3-{{id}}">♣</label>
          <input type="radio" name="rate-{{id}}" value="2" id="rate2-{{id}}" disabled><label class="radio-label" for="rate2-{{id}}">♣</label>
          <input type="radio" name="rate-{{id}}" value="1" id="rate1-{{id}}" disabled><label class="radio-label" for="rate1-{{id}}">♣</label>
        </div>
        <div>
          <p>{{score_reason}}</p><br>
        </div>
      </fieldset>
    <input type="hidden" class="score-value" value="{{score}}">
    <input type="hidden" class="review-id" value="{{id}}">
</div>

<hr>
{{/reviewDtos}}
</div>
<br>

<!--나의 리뷰-->
{{#my_review}}
<div class="card mb-3" id="reviews-{{id}}">
  <div class="card-body">
<div id="review-section">
  <div id="reviews">
    <h5><b>나의 리뷰</b></h5>
    <p>평점 : <b>{{score}}</b> 점</p>
    <!--태그내용-->
    선택한 키워드<br>
    {{#selectingTags}}
      <label class="checkbox-label">
          <input type="checkbox" name="selectingTags" checked disabled>
          <span>{{.}}</span>
      </label>
    {{/selectingTags}}
    <br>
    <p>{{score_reason}}</p><br>
  </div>
  <button type="button"
    class="btn btn-sm btn-primary"
    data-bs-toggle="modal"
    data-bs-target="#review-edit-modal"
    data-bs-id="{{id}}"
    data-bs-score="{{score}}"
    data-bs-score_reason="{{score_reason}}"
    data-bs-member-id="{{member_id}}"
    data-bs-article-id="{{article_id}}"
    data-bs-tags='[{{#selectingTags}}"{{.}}",{{/selectingTags}}]'>수정</button>
  <button type="button"
    class="btn btn-sm btn-outline-danger review-delete-btn"
    data-review-id="{{id}}" data-review-title="{{title}}" data-article-id="{{article_id}}">삭제</button>
</div>
</div>
</div>

{{/my_review}}

{{^my_review}}
<!--로그인ㅇ&리뷰x-->
  <!--<link href="/resources/templates/layouts/css.mustache" rel="stylesheet"/>-->
  <!--<form class="mb-3" name="starform" action="/articles/{{id}}/create_r" id="scoreForm" method="post">-->
     <form class="mb-3" name="starform" id="scoreForm">
      <input type="hidden" id="member-id" value="{{member_id}}"><br>
      <input type="hidden" id="article-id" value="{{id}}"><br>
      <h4>리뷰작성하기</h4>
      <span class="text-bold">작품에 평점을 표시해주세요</span><br>
      <fieldset>
        <input type="radio" name="score" value="5" id="rate1"><label class="radio-label" for="rate1">♣</label>
        <input type="radio" name="score" value="4" id="rate2"><label class="radio-label" for="rate2">♣</label>
        <input type="radio" name="score" value="3" id="rate3"><label class="radio-label" for="rate3">♣</label>
        <input type="radio" name="score" value="2" id="rate4"><label class="radio-label" for="rate4">♣</label>
        <input type="radio" name="score" value="1" id="rate5"><label class="radio-label" for="rate5">♣</label>
      </fieldset>
      <!-- 기존 태그 선택 -->
      <div id="existing-tags">
      <span>작품의 <strong>키워드</strong>를 선택해주세요</span><br>
        {{#tagList}}
        <label class="checkbox-label">
          <input type="checkbox" name="selectingTags" value="{{.}}">
          <span>{{.}}</span>
        </label>
        {{/tagList}}
      </div>
      <!-- 추가된 태그 표시 -->
      <div id="addedTagContainer" style="display: none;">
          <label class="checkbox-label">
              <input type="checkbox" name="selectingTags" id="addedTagCheckbox" value="" checked>
              <span id="addedTagText"></span>
              <button type="button" id="removeTagBtn" class="btn btn-danger btn-sm">삭제</button>
          </label>
      </div>
      <div style="display: flex; align-items: center;">
        <input type="text" id="newTagInput" placeholder="새 키워드 추가" class="form-control" maxlength="20" style="width: 200px; margin-right: 8px;">
        <button type="button" id="addTagBtn" class="btn btn-secondary">추가</button><br>
        *키워드 추가는 처음 리뷰 작성시만 가능합니다.(선택해제는 수정에서도 가능합니다.)
      </div>
      
    <br>
        
    <div>
      <textarea class="col-auto form-control" type="text" id="score-reason"
            placeholder="간단하게 해당 점수를 택한 이유를 적어주세요."></textarea>
    </div>

    <button type="button" class="btn btn-primary" id="reviewCreateBtn">리뷰 작성</button>
  </form>	

{{/my_review}}

<!--리뷰수정-->
<!-- Modal -->
<div class="modal fade" id="review-edit-modal" tabindex="-1"">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5"
            id="exampleModalLabel">리뷰 수정</h1>
        <button type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <!--댓글 수정 폼-->
        <form>
            <!--평점 입력-->
            <div class="mb-3">
              <label class="form-label">평점</label>
              <div class="editReview" name="starform" id="scoreForm">
                <span class="text-bold">작품에 평점을 표시해주세요</span><br>
                <fieldset>
                  <input type="radio" name="score" value="5" id="rate1"><label class="radio-label"
                    for="rate1">♣</label>
                  <input type="radio" name="score" value="4" id="rate2"><label class="radio-label"
                    for="rate2">♣</label>
                  <input type="radio" name="score" value="3" id="rate3"><label class="radio-label"
                    for="rate3">♣</label>
                  <input type="radio" name="score" value="2" id="rate4"><label class="radio-label"
                    for="rate4">♣</label>
                  <input type="radio" name="score" value="1" id="rate5"><label class="radio-label"
                    for="rate5">♣</label>
                </fieldset>
                <input type="hidden" id="member-id" value="{{member_id}}"><br>
                <input type="hidden" id="article-id" value="{{id}}"><br>
              </div>	  
            </div>
            <div class="mb-3">
              <label class="form-label">키워드 선택</label>
              <div id="existing-tags">
                {{#tagList}}
                  <label class="checkbox-label">
                    <input type="checkbox" name="selectingTags" value={{.}} {{#selected}}checked{{/selected}}>
                    <span>{{.}}</span>
                  </label>
                {{/tagList}}
              </div>
            </div>
            <!--한줄평 입력-->
            <div class="mb-3">
            <textarea class="col-auto form-control" type="text" id="edit-review-score_reason"
                        placeholder="간단하게 해당 점수를 택한 이유를 적어주세요."></textarea>
            </div>
            <!--히든 인풋-->
                <input type="hidden" id="edit-review-id">
                <input type="hidden" id="edit-review-member-id">
                <input type="hidden" id="edit-review-article-id"">
            <!--전송 버튼-->
            <button type="button" class="btn btn-primary"
                id="review-update-btn">수정 완료</button>
        </form>
      </div>
      
    </div>
  </div>
</div>
<!-- 삭제 확인 모달 -->
<div class="modal fade" id="review-delete-confirm-modal" tabindex="-1" aria-labelledby="reviewDeleteConfirmLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="ReviewDeleteConfirmLabel">리뷰 삭제</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        정말로 이 리뷰를 삭제하시겠습니까?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">아니오</button>
        <button type="button" class="btn btn-danger" id="confirm-review-delete-btn">예</button>
      </div>
    </div>
  </div>
</div>

{{#write}}
  <a href="/write/article/anime/{{id}}/edit" class="btn btn-sm btn-primary">작품 수정</a>
  <a href="#" class="btn btn-sm btn-outline-danger" onclick="confirmDelete('{{id}}', false)">작품 삭제</a>
{{/write}}
{{#admin}}
  <a href="#" class="btn btn-sm btn-outline-danger admin" onclick="confirmDelete('{{id}}', true)">작품 삭제(관리자 권한)</a>
{{/admin}}
  <a href="/articles/anime" class="btn btn-sm btn-success">작품 목록</a>
{{/article}}
  
</div>

<script>
  {
    //전체리뷰 띄우기
    document.addEventListener("DOMContentLoaded", function() {
      const reviewToggle = document.querySelector('.review-toggle');
      const reviewContent = document.querySelector('.review-content');
      //초기에 reviewContent 접은 상태로 설정
      reviewContent.style.display = 'none';

      reviewToggle.addEventListener('click', function() {
        reviewContent.classList.toggle('active');
        if (reviewContent.classList.contains('active')) {
            reviewToggle.textContent = '전체리뷰 접기';
            //리뷰 보이게
            reviewContent.style.display='block';
        } else {
              reviewToggle.textContent = '전체리뷰 펼치기';
              //리뷰 안보이게
              reviewContent.style.display='none';
          }
      });


      document.querySelectorAll(".review").forEach(function(card) {
          const score = card.querySelector(".score-value").value;
          const id = card.querySelector(".review-id").value;
          card.querySelector(`input[name="rate-${id}"][value="${score}"]`).checked = true;
      });

    //리뷰생성시 태그 1개 추가
    const newTagInput = document.querySelector('#newTagInput');
    const addTagBtn = document.querySelector('#addTagBtn');
    const addedTagContainer = document.querySelector('#addedTagContainer');
    const addedTagCheckbox = document.querySelector('#addedTagCheckbox');
    const addedTagText = document.querySelector('#addedTagText');
    const removeTagBtn = document.querySelector('#removeTagBtn');

    // 태그 추가 버튼 클릭 시
    addTagBtn.addEventListener('click', function () {
        const newTag = newTagInput.value.trim();
        if (newTag !== '') {
            // 입력된 태그를 추가하고 input 비활성화
            addedTagText.textContent = newTag;
            addedTagCheckbox.value = newTag;
            addedTagContainer.style.display = 'inline-block'; // 태그 컨테이너 보이기
            newTagInput.disabled = true;  // input 비활성화
            addTagBtn.disabled = true;    // 추가 버튼 비활성화
        }
        else{
          addedTagCheckbox.value='';
        }
    });

    // 태그 삭제 버튼 클릭 시
    removeTagBtn.addEventListener('click', function () {
        // 추가된 태그를 제거하고 input 활성화
        addedTagContainer.style.display = 'none'; // 태그 컨테이너 숨기기
        newTagInput.value = '';                   // input 필드 초기화
        newTagInput.disabled = false;             // input 활성화
        addTagBtn.disabled = false;               // 추가 버튼 활성화
    });


    //리뷰 생성 버튼 변수화
    const reviewCreateBtn=document.querySelector("#reviewCreateBtn");
    //이벤트 감지되면 이벤트 처리 함수 실행
    reviewCreateBtn.addEventListener("click",function(){
      //라디오 버튼에서 선택된 값을 가져오기 
      const scoreElement=document.querySelector('input[name="score"]:checked');
      
      //새 리뷰 객체 생성
      const review={
        //새 리뷰의 멤버id,게시글id,점수,한줄평
        member_id:document.querySelector("#member-id").value,
        article_id:document.querySelector("#article-id").value,
        score:scoreElement ? scoreElement.value : null,
        score_reason:document.querySelector("#score-reason").value,
        //선택중인 tag값 가져오기
        selectingTags:Array.from(document.querySelectorAll('input[name="selectingTags"]:checked'))
                            .map(checkbox=>checkbox.value)
      };

      //선택된 라디오 버튼이 없는 경우 경고 메시지를 출력하고 함수 종료
      if(!scoreElement){
        alert('평점을 선택해주세요.');
        return;
      }


      //review객체를 확인하기 위해 콘솔에 출력(디버깅용, 추후 삭제하기)
       console.log(review);
      //review객체 서버에 post, 비동기 통신을 위한 fetch API
      const url="/api/articles/"+review.article_id+"/create_r"
      fetch(url,{
        method:"POST",
        headers:{
          "Content-Type": "application/json"
        },
        body: JSON.stringify(review)//review객체를 JSON 문자열로 변환해 전송
      }) 
      .then(response => {
        //HTTP 응답코드에 따른 메시지 출력
        const msg=(response.ok)?"리뷰 작성 완료 :)":"리뷰 작성 중 오류가 발생하였습니다.";
        alert(msg);
        //현재페이지 새로고침
        window.location.reload();
      })
      .then(data => {

        document.querySelector("#reviewCreateBtn").disabled = true;
        document.querySelector("#reviewCreateBtn").classList.add('hidden');

        const reviewSection = document.querySelector("#review-section");
        reviewSection.classList.remove('hidden');

        const reviewsDiv = document.querySelector("#reviews");
        reviewsDiv.innerHTML = `
            <div class="review">
                <p>Member ID: <span id="display_member_id">${review.member_id}</span></p>
                <p>Article ID: <span id="display_article_id">${review.article_id}</span></p>
                <p>Score: <span id="display_score">${review.score}</span></p>
                <p>Reason: <span id="display_score_reason">${review.score_reason}</span></p>
            </div>
        `;

    })
      .catch((error)=>{
        console.error('Error:',error);
      });
    })
    
  });
    
  }
  //모달 이벤트 처리
  {
    //모달 클릭 시 데이터 띄우기
        //모달 요소 선택
        const reviewEditModal=document.querySelector("#review-edit-modal");
        //모달 이벤트 감지
        reviewEditModal.addEventListener("show.bs.modal", function(event){
            //1. 트리거 버튼 선택(event.target은 모달 자체)
            const triggerBtn=event.relatedTarget;
            console.log("data-bs-tags:", triggerBtn.getAttribute("data-bs-tags")); // data-bs-tags 값 확인
            //2. 데이터 가져오기
            const id=triggerBtn.getAttribute("data-bs-id");
            const score=triggerBtn.getAttribute("data-bs-score");
            const score_reason=triggerBtn.getAttribute("data-bs-score_reason");
            const memberId=triggerBtn.getAttribute("data-bs-member-id");
            const articleId=triggerBtn.getAttribute("data-bs-article-id");
            let tagsData = triggerBtn.getAttribute("data-bs-tags") || "[]"; // 태그 데이터가 없으면 빈 배열로 설정

            // JSON 문자열에서 마지막 쉼표 제거
            tagsData = tagsData.replace(/,\s*([\]}])/g, '$1');
            console.log("tagsData:", tagsData); // tagsData 값을 확인
            let tags;
            try {
                tags = JSON.parse(tagsData); // JSON으로 변환
                console.log("Parsed tags:", tags); // 파싱된 태그 배열 확인
            } catch (error) {
                console.error("Error parsing tagsData:", error);
                tags = []; // JSON 파싱 오류 발생 시 빈 배열로 설정
            }
            //3. 수정 폼에 데이터 반영
            document.querySelector("#edit-review-id").value=id;
            //document.querySelector("#edit-review-score").value=score;
            document.querySelector("#edit-review-score_reason").value=score_reason;
            document.querySelector("#edit-review-member-id").value=memberId;
            document.querySelector("#edit-review-article-id").value=articleId;
            //리뷰 평점 선택되어있게
            document.querySelectorAll(".editReview").forEach(function(card) {
              card.querySelector(`input[name="score"][value="${score}"]`).checked = true;
            //태그 선택되어있게
            document.querySelectorAll('#existing-tags input[name="selectingTags"]').forEach(checkbox=>{
              checkbox.checked=tags.includes(checkbox.value);
            })
          });
        });
   

  }
  {
    //REST API로 데이터 반영
        //수정 완료 버튼 선택
        const reviewUpdateBtn=document.querySelector("#review-update-btn");
        //클릭 이벤트 처리
        reviewUpdateBtn.addEventListener("click", function(){
            //라디오 버튼에서 선택된 값을 가져오기 
            const scoreElement=document.querySelector('input[name="score"]:checked');
            //수정 댓글 객체 생성
            const review={
                id: document.querySelector("#edit-review-id").value,
                score:scoreElement ? scoreElement.value : null,
                score_reason: document.querySelector("#edit-review-score_reason").value,
                member_id: document.querySelector("#edit-review-member-id").value,
                article_id: document.querySelector("#edit-review-article-id").value,
                selectingTags: Array.from(document.querySelectorAll('input[name="selectingTags"]:checked'))
                                    .map(checkbox=>checkbox.value)
            };
            console.log(review);
            //수정 REST API 호출
            const url="/api/reviews/"+review.id;
            fetch(url, {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(review)//review 객체를 JSON문자열로 변환 전송
            }).then(response=>{
                //HTTP 응답코드에 따른 메시지 출력
                const msg=(response.ok)?"리뷰가 수정됐습니다. ♪(^∇^*)":"리뷰 수정 실패! ~(>_<。)＼";
                alert(msg);
                //현재 페이지 새로고침
                window.location.reload();
            });
        });
  }
</script>
<!--리뷰 삭제-->
<script>
    {
        //삭제 버튼 선택
        const reviewDeleteBtns=document.querySelectorAll(".review-delete-btn");
        let reviewId, reviewTitle, articleId;

        //삭제 확인 모달의 예 버튼
        const confirmReviewDeleteBtn=document.getElementById('confirm-review-delete-btn');
        //삭제 버튼 이벤트 처리
        reviewDeleteBtns.forEach(btn => {
            btn.addEventListener("click", (event)=>{
                //이벤트 발생 요소 선택
                const reviewDeleteBtn=event.target;
                //삭제 리뷰 id 가져오기
                reviewId=reviewDeleteBtn.getAttribute("data-review-id");
                reviewTitle=reviewDeleteBtn.getAttribute("data-review-title");
                articleId=reviewDeleteBtn.getAttribute("data-article-id");
                console.log(`삭제 버튼 클릭: ${reviewId}번 댓글`);

                //삭제 확인 모달 띄우기
                const reviewDeleteConfirmModal=new bootstrap.Modal(document.getElementById('review-delete-confirm-modal'));
                reviewDeleteConfirmModal.show();
                
            });
        });
        confirmReviewDeleteBtn.addEventListener("click",()=>{
          //삭제 REST API 호출
                const url=`/api/reviews/${articleId}/${reviewId}`;
                fetch(url, {
                    method: "DELETE"
                }).then(response=>{
                    //리뷰 삭제 실패 처리
                    if(!response.ok){
                        alert("리뷰 삭제 실패..!");
                        return;
                    }
                    //삭제 성공 시 댓글을 화면에서 지우고 메시지 창 띄우기
                    const target=document.querySelector(`#reviews-${reviewId}`);
                    target.remove();
                    const msg=`${reviewTitle}에 대한 리뷰를 삭제했습니다.`;
                    alert(msg);
                    //현재 페이지 새로고침
                    window.location.reload();
                })
        })
    }
    {
      //tag선택
      function toggleTag(tagId) {
            const checkbox = document.getElementById('tag_' + tagId);
            checkbox.checked = !checkbox.checked;
        }
    }

    {
      //게시글삭제버튼
      function confirmDelete(articleId, isAdmin) {
        if (confirm("정말로 이 작품을 삭제하시겠습니까?")) {
          const url=`/write/article/anime/${articleId}/delete?admin=${isAdmin}`;

            fetch(url, {
                method: 'POST'
            }).then(response => {
              return response.json().then(data => {
                console.log(response);
                   if (!response.ok) {
                      alert(data.error);
                      window.location.reload();
                  } else {
                      alert(data.message); // 삭제 완료 메시지
                      window.location.href = `/articles/anime`; // 목록 페이지로 이동
                  }
              });
          })
          .catch(error => {
              alert("오류가 발생했습니다: " + error);
          });
        }
    }
    }
</script>


<style>
  /* CSS */
.col-md-6 {
  word-wrap: break-word;
}
.review {
 /*border: 1px solid #ccc;  테두리 선 스타일 */
  text-align: left;
  padding: 10px; /* 내부 여백 */
  margin-bottom: 10px; /* 아래쪽 마진 */
  background-color: #f9f9f9; /* 배경색 */
}

.review-toggle {
  cursor: pointer;
  color: blue;
  text-decoration: underline;
  display: block;
  margin-bottom: 5px;
}

.review-content {
  max-height: 700px; /* 리뷰 내용 최대 높이 */
  overflow-y: auto; /* 세로 스크롤 추가 */
}
.review p {
  margin: 5px 0; /* 각 정보(멤버 ID, 게시글 ID 등)의 위아래 마진 */
}

.review span {
    font-weight: bold; /* 정보(멤버 ID, 게시글 ID 등)의 텍스트를 굵게 설정 */
    color: #333; /* 텍스트 색상 */
}
</style>
{{>layouts/footer}}