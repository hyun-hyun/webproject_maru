spring.application.name=webproject_maru

#스프링부트 한글 사용
server.servlet.encoding.force=true

#H2관련(초기테스트용)
#한글 사용
#spring.sql.init.encoding=utf-8
#웹콘솔접속 허용
#spring.h2.console.enabled=true
#초기데이터값 data.sql(main/resources/) 넣기
#spring.jpa.defer-datasource-initialization=true
#유니크 URL 생성하지 않기
#spring.datasource.generate-unique-name=false
#(로컬테스트)고정 URL 생성
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driver-class-name=org.h2.Driver

#실행 시 DB생성
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


#MySQL관련

##----배포시 수정부분----##
#(로컬테스트)고정 URL 생성
spring.datasource.url=jdbc:mysql://localhost:3306/webproject_maru1
#(서버테스트)고정 URL 생성
#spring.datasource.url=jdbc:mysql://172.17.0.3:3306/webproject_maru1

spring.datasource.username=root
spring.datasource.password=mysql
spring.sql.init.mode=always
#초기값 넣기
#spring.sql.init.data-locations=classpath:data.sql


#JPA 로깅 설정
#디버그 레벨로 쿼리 출력
logging.level.org.hibernate.SQL=DEBUG
#쿼리 줄바꿈
spring.jpa.properties.hibernate.format_sql=true
#?로 나오는 매개변수값 보여주기
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

##----배포시 수정부분----##
#포트변경(기본은 톰캣 8080)
#server.port=8888

#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#파일 업로드 용량제한 설정(기본1MB)
spring.servlet.multipart.max-request-size=1000MB
spring.servlet.multipart.max-file-size=1000MB

##----배포시 수정부분----##
#로컬테스트기준
file.upload-dir=src/main/resources/static/images/pic/
#nas 도커 기준
#file.upload-dir=/usr/local/tomcat/webapps/images/pic/

#mustache 캐시삭제(개발용)
spring.mustache.cache=false
#디버깅용 로그
#logging.level.org.springframework=DEBUG
#logging.level.org.springframework.security=DEBUG

#이메일 서버설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=maruauth
spring.mail.password=cdpsaqwlabfqqbhe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#이메일 인증용 Redis 설정
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=redis