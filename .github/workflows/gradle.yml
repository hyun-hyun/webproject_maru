# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to NAS

on:
  push:
    branches: [ "main" ] # main 브랜치에 push할 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4

    - name: Gradle 빌드
      run: ./gradlew build -x test

    - name: NAS에 WAR 파일 전송
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.NAS_HOST }}
        username: ${{ secrets.NAS_USER }}
        key: ${{ secrets.NAS_SSH_KEY }}
        source: "build/libs/webproject_maru.war"
        target: "/volume1/docker/tomcat10/webapps/maru_project"

    - name: NAS에서 기존 컨테이너 중지 & 재시작
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.NAS_HOST }}
        username: ${{ secrets.NAS_USER }}
        key: ${{ secrets.NAS_SSH_KEY }}
        script: |
          docker stop tomcat-1
          docker rm tomcat-1
          docker run -d --name tomcat-1 -p 8080:8080 -v /volume1/docker/tomcat10/webapps/maru_project:/usr/local/tomcat/webapps/maru_project tomcat:10.1

    - name: 배포 완료 후 GitHub Releases 태그 추가
      run: |
        VERSION=$(date +"%Y%m%d-%H%M%S")
        git tag $VERSION
        git push origin $VERSION
