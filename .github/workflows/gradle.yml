# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to NAS

on:
  push:
    branches: [ "main" ] # main 브랜치에 push할 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4

    - name: Gradle 실행권한 추가
      run: chmod +x gradlew

    - name: Gradle 빌드
      run: ./gradlew build -x test

    - name: NAS에 JAR 파일 전송
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.NAS_HOST }}
        username: ${{ secrets.NAS_USER }}
        key: ${{ secrets.NAS_SSH_KEY }}
        port: 2222
        source: "build/libs/*.jar"
        target: "/volume1/docker/app/"

    - name: NAS에서 기존 컨테이너 중지 & 재시작
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.NAS_HOST }}
        username: ${{ secrets.NAS_USER }}
        key: ${{ secrets.NAS_SSH_KEY }}
        port: 2222
        script: |
          cd /volume1/docker
          docker-compose down
          docker-compose up -d

#    - name: NAS에서 기존 컨테이너 중지 & 재시작
 #     run: |
  #        ssh -p 2222 -i ${{ secrets.NAS_SSH_KEY }} ${{ secrets.NAS_USER }}@${{ secrets.NAS_HOST }} << 'EOF'
   #       cd /volume1/docker/app
    #      docker-compose down
     #     docker-compose up -d --build
      #    EOF
          
    - name: 배포 완료 후 GitHub Releases 태그 추가
      run: |
        VERSION=$(date +"%Y%m%d-%H%M%S")
        git tag $VERSION
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} --tags  # 생성한 태그를 원격에 푸시
        git push origin $VERSION
